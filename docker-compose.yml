services:
  documents:
    container_name: documents
    build: ./documents
    command: [ "python", "-m", "documents" ]
    ports:
      - "8000:8000"
    volumes:
      - ./documents:/usr/src/documents
      - app_logs:/var/log
    env_file:
      - ./documents/.env
    depends_on:
      - documents_db

  documents_db:
    container_name: documents_db
    image: postgres:17.6
    volumes:
      - documents_db_data:/var/lib/postgresql/data
    ports:
      - "5601:5432"
    env_file:
      - documents/.env

  identity:
    container_name: identity
    build: ./identity
    command: ["python", "-m", "identity"]
    ports:
      - "8001:8001"
    volumes:
      - ./identity:/usr/src/identity
      - app_logs:/var/log
    env_file:
      - ./identity/.env
    depends_on:
      - identity_db

  identity_db:
    container_name: identity_db
    image: postgres:17.6
    volumes:
      - identity_db_data:/var/lib/postgresql/data
    ports:
      - "5602:5432"
    env_file:
      - identity/.env

  loki:
    image: grafana/loki:3.5
    ports:
      - "3100:3100"
    command: -config.file=/etc/loki/local-config.yaml
    environment:
      TZ: ${SYSTEM_TIMEZONE:-Europe/Moscow}
    networks:
      - monitoring

  promtail:
    image: grafana/promtail:latest
    volumes:
      - app_logs:/var/log
      - ./grafana/promtail-config.yaml:/etc/promtail/config.yaml
    command: -config.file=/etc/promtail/config.yaml
    networks:
      - monitoring
    depends_on:
      - loki

  grafana:
    image: grafana/grafana:12.2
    ports:
      - "3000:3000"
    environment:
      - GF_PATHS_PROVISIONING=/etc/grafana/provisioning
    volumes:
      - grafana-storage:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
      - ./grafana/dashboards:/var/lib/grafana/dashboards
    env_file:
      - grafana/.env
    networks:
      - monitoring
    depends_on:
      - loki

networks:
  monitoring:
    driver: bridge

volumes:
  documents_db_data:
  identity_db_data:
  grafana-storage:
  app_logs:
